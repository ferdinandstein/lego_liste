name: Deploy Vuetify with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    defaults:
        run:
            working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Install node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Set up cache
        id: cache-frontend-node-modules
        uses: actions/cache@v4
        with:
            path: frontend/node_modules
            key: node-modules-frontend-${{ hashFiles('frontend/package-lock.json') }}
      - if: steps.cache-frontend-node-modules.outputs.cache-hit != 'true'
        name: Install dependencies
        run: npm install --prefer-offline --no-audit --progress=false
      - name: Build
        run: npm run build
      - name: Upload artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
            path: frontend/dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
